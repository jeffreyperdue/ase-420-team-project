[33mcommit a52255b606f6b1a5a63a79df6435782c6ba8d805[m[33m ([m[1;31morigin/Owen[m[33m)[m
Author: Owen Newberry <owen@owennewberry.com>
Date:   Sun Sep 28 15:27:09 2025 -0400

    implemented keyboard mapping and return intents in game loop

[1mdiff --git a/src/game/game.py b/src/game/game.py[m
[1mindex c740cf6..c4dd897 100644[m
[1m--- a/src/game/game.py[m
[1m+++ b/src/game/game.py[m
[36m@@ -1,7 +1,7 @@[m
 import pygame[m
 from src.constants import SCREEN_SIZE, FPS[m
 from src.view.pygame_renderer import PygameRenderer[m
[31m-[m
[32m+[m[32mfrom src.view.input import InputHandler[m
 class Game:[m
     def __init__(self, board, piece_generator):[m
         pygame.init()[m
[36m@@ -13,15 +13,25 @@[m [mclass Game:[m
         self.piece_generator = piece_generator[m
         self.active_piece = piece_generator.spawn()[m
         self.renderer = PygameRenderer(self.screen)[m
[32m+[m[32m        self.input_handler = InputHandler()[m
 [m
         self.done = False[m
 [m
     def run(self):[m
         while not self.done:[m
[31m-            for event in pygame.event.get():[m
[32m+[m[32m            events = pygame.event.get()[m
[32m+[m
[32m+[m[32m            # Quit check[m
[32m+[m[32m            for event in events:[m
                 if event.type == pygame.QUIT:[m
                     self.done = True[m
[31m-                # input handling will live in input.py later[m
[32m+[m
[32m+[m[32m            # turn raw pygame events â†’ intents[m
[32m+[m[32m            intents = self.input_handler.get_intents(events)[m
[32m+[m
[32m+[m[32m            # Debug: log intents to console[m
[32m+[m[32m            if intents:[m
[32m+[m[32m                print("Intents:", intents)[m
 [m
             # TODO: gravity / movement updates[m
 [m
[1mdiff --git a/src/view/input.py b/src/view/input.py[m
[1mindex e69de29..bed12e6 100644[m
[1m--- a/src/view/input.py[m
[1m+++ b/src/view/input.py[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mimport pygame[m
[32m+[m
[32m+[m[32mclass InputHandler:[m
[32m+[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        # Map pygame keys to intent strings[m
[32m+[m[32m        self.key_map = {[m
[32m+[m[32m            pygame.K_UP: "ROTATE",[m
[32m+[m[32m            pygame.K_LEFT: "LEFT",[m
[32m+[m[32m            pygame.K_RIGHT: "RIGHT",[m
[32m+[m[32m            pygame.K_DOWN: "DOWN",[m
[32m+[m[32m            pygame.K_SPACE: "DROP",[m
[32m+[m[32m            pygame.K_RETURN: "START"[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m    def get_intents(self, events):[m
[32m+[m[32m        intents = [][m
[32m+[m[32m        for event in events:[m
[32m+[m[32m            if event.type == pygame.KEYDOWN:[m
[32m+[m[32m                if event.key in self.key_map:[m
[32m+[m[32m                    intents.append(self.key_map[event.key])[m
[32m+[m[32m        return intents[m
